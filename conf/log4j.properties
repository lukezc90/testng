log4j.rootLogger=INFO, stdout, logfile


log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.stdout.layout.ConversionPattern=%n---%d{yyyy/MM/dd HH\:mm\:ss} [%p]---[%t] %l---%n---%m---%n

log4j.appender.logfile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.logfile.File=./logs/testCase.log
log4j.appender.logfile.DatePattern = '.'yyyyMMdd-HHmmss
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%n---%d{yyyy/MM/dd HH\:mm\:ss} [%p]---[%t] %l---%n---%m---%n


#%p 输出优先级，即 DEBUG ， INFO ， WARN ， ERROR ， FATAL
#%r 输出自应用启动到输出该 log 信息耗费的毫秒数
#%c 输出所属的类目，通常就是所在类的全名
#%t 输出产生该日志事件的线程名
#%n 输出一个回车换行符， Windows 平台为 “rn” ， Unix 平台为 “n”
#%d 输出日志时间点的日期或时间，默认格式为 ISO8601 ，也可以在其后指定格式，比如： %d{yyy MMM dd HH:mm:ss,SSS} ，输出类似： 2002 年 10 月 18 日 22 ： 10 ： 28 ， 921
#%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例： Testlog4.main(TestLog4.java:10)

# ■■■■■ 详细介绍 http://blog.csdn.net/anlina_1984/article/details/5313023
# 下面ConversionPattern里要输出中文，需用16进制格式输出中文

#log4j.appender.NTconsole=org.apache.log4j.ConsoleAppender
#log4j.appender.NTconsole.layout=org.apache.log4j.PatternLayout
#log4j.appender.NTconsole.layout.ConversionPattern=%n\u4FE1\u606F\:%t---%d{yyyy/MM/dd HH\:mm\:ss}---[%p]%l---%n---%m---%n

#log4j.appender.errorFiles=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.errorFiles.layout=org.apache.log4j.PatternLayout
#log4j.appender.errorFiles.File=../webapps/dtp/logs/dtp_logerror.txt
#log4j.appender.errorFiles.layout.ConversionPattern=%n\u4FE1\u606F\:%t---%d{yyyy/MM/dd HH\:mm\:ss}---[%p]%l---%n---%m---%n
#log4j.appender.errorFiles.Threshold=ERROR
#log4j.appender.errorFiles.ImmediateFlush=true

#log4j.appender.files=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.files.layout=org.apache.log4j.PatternLayout
#log4j.appender.files.File=../webapps/dtp/logs/dtp_log.txt
#log4j.appender.files.layout.ConversionPattern=%n\u4FE1\u606F\:%t---%d{yyyy/MM/dd HH\:mm\:ss}---[%p]%l---%n---%m---%n
#log4j.appender.files.ImmediateFlush=true

